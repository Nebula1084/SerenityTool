.ORIGIN         0x0
                addi    $sp, $zero, 0x2EFE

                la      $a0, str
                addi    $v0, $zero, 1
                addi    $a1, $zero, 10
                syscall
                 
                sw      $zero, 0x4FFE($zero)     
                move    $s6, $zero              # pointer to the current character in memory
                move    $s7, $zero              # the offset of the last character in memory
                addi    $t7, $zero, 40          # width of screen
                addi    $t6, $zero, 25          # height of screen
                addi    $t5, $zero, 0x1000      # capity of the memory allocated to the editor
                addi    $s5, $zero, 0x5F        # underline
                move    $s4, $zero
                
                move    $a0, $s5
                addi    $a1, $zero, 1
                move    $a2, $zero
                jal     PRINTCHAR
                
LOOP:           jal     GETCHAR
                addi    $t0, $zero, 172         # up
                beq     $a0, $t0, UP
                addi    $t0, $zero, 180         # down
                beq     $a0, $t0, DOWN          
                addi    $t0, $zero, 175         # left
                beq     $a0, $t0, LEFT
                addi    $t0, $zero, 177         # right
                beq     $a0, $t0, RIGHT
                addi    $t0, $zero, 0x08        # backspace
                beq     $a0, $t0, BACKSPACE
# Line 29-37: insert the character into the memory allocated to editor                
                addi    $t1, $s6, 0x2000
                addi    $t2, $s7, 0x2000
                beq     $s6, $s7, INSERT        # if ($s6 == $s7) goto INSERT               
MOVELOOP1:      lh      $t0, -1($t2)
                sh      $t0, 0($t2)
                addi    $t2, $t2, -1
                beq     $t1, $t2, INSERT
                j       MOVELOOP1  
INSERT:         sh      $a0, 0($t1)
                addi    $s6, $s6, 1
                addi    $s7, $s7, 1
                
# Line 40- : print the character in the memory allocated to editor                     
PRINT:          addi    $a1, $zero, 1           # x
                add     $a2, $zero, $zero       # y        
                addi    $t1, $zero, 0x2000
                addi    $t2, $s7, 0x2000
                addi    $t3, $s6, 0x2000
                push    $a1
                push    $a2
                beq     $t1, $t2, ENDPRINT
                pop     $a2
                pop     $a1
PRINTLOOP:      lh      $a0, 0($t1)
                addi    $t0, $zero, 0x0D        # linefeed
                beq     $a0, $t0, LINEFEED
SKIP1:          jal     PRINTCHAR
                addi    $a2, $a2, 1
                beq     $a2, $t7, LINEFEED
NEXTPRINT:      addi    $t1, $t1, 1
                push    $a1
                push    $a2
                beq     $t1, $t2, ENDPRINT
                pop     $a2
                pop     $a1
                j       PRINTLOOP
                                                  
LINEFEED:       addi    $a1, $a1, 1
                move    $a2, $zero
                j       NEXTPRINT

ENDPRINT:       beq     $s6, $s7, R2 
                lh      $a0, 0x2000($s7)           
                jal     PRINTCHAR
                j       LOOP
                
R2:             move    $a0, $s5
                jal     PRINTCHAR
                move    $a0, $zero
                push    $a2
                push    $a1
                addi    $a2, $a2, 1
                jal     CHECKLINEFEED
                jal     PRINTCHAR
                pop     $a1
                pop     $a2
                j       LOOP

CHECKLINEFEED:  beq     $a2, $t7, DOLINEFEED
                jr      $ra
DOLINEFEED:     addi    $a1, $a1, 1
                move    $a2, $zero
                jr      $ra

# the following 12 lines is to delete the character at offset = $s6 - 1
BACKSPACE:      beq     $s6, $zero, PRINT
                addi    $t1, $s6, 0x2000
                addi    $t2, $s7, 0x2000
                beq     $s6, $s7, DELETE
MOVELOOP2:      lh      $t0, 0($t1)
                sh      $t0, -1($t1)
                addi    $t1, $t1, 1
                beq     $t1, $t2, DELETE
                j       MOVELOOP2
DELETE:         sh      $zero, -1($t2)                
                addi    $s6, $s6, -1
                addi    $s7, $s7, -1
                j       PRINT
                
UP:             j       LOOP

                
DOWN:           j       LOOP

                
LEFT:           beq     $s6, $zero, LOOP
                sh      $s4, 0x2000($s6)
                addi    $s6, $s6, -1
                lh      $t1, 0x2000($s6)
                move    $s4, $t1
                sh      $s5, 0x2000($s6)
                j       PRINT
                
RIGHT:          beq     $s6, $s7, LOOP
                sh      $s4, 0x2000($s6)
                addi    $s6, $s6, 1
                lh      $t1, 0x2000($s6)
                move    $s4, $t1
                sh      $s5, 0x2000($s6)
                j       PRINT            

                                      
GETCHAR:        push    $v0
                push    $a3
                addi    $v0, $zero, 3
                syscall
                move    $a0, $a3
                pop     $a3
                pop     $v0
                jr      $ra

PRINTCHAR:      push    $v0
                addi    $v0, $zero, 2
                syscall
                pop     $v0
                jr      $ra
                 
str:    .asciiz "Serenity Editor v1.3"       