.ORIGIN         0x0
                la      $t0, RETADDR
                sw      $ra, 0($t0)
                
                li      $v0, 6
                move    $a1, $zero
                move    $a2, $zero
                syscall

                #bne     $v0, $zero, LOADFILE
         
                la      $a0, str
                li      $v0, 1
                li      $a1, 10
                syscall
                 
                sw      $zero, 0x4FFE($zero)  
                li      $s7, 40                 # width of screen 
                li      $s6, 25                 # height of screen 
                li      $s5, 0x0800             # capity of the memory allocated to the editor
                li      $s4, 1                  # the offset of the last character in memory      
                move    $s3, $zero              # pointer to the current character in memory
                li      $t7, 0x5F               # underline
                li      $t6, 0x0000FFFF         # mask 
                move    $t5, $zero    
                la      $t4, EDITORMEM
                addi    $t4, $t4, 1             # address to store data
                
                sh      $t7, 0($t4)
                addi    $t3, $t4, 1
                sh      $zero, 0($t3) 
                
MAINLOOP:       jal     GETCHAR
                li      $t0, 0x0000001B         # esc
                beq     $a0, $t0, EXIT
                li      $t0, 0x00010026         # up arrow
                beq     $a0, $t0, UPARROW       
                li      $t0, 0x00010028         # down arrow
                beq     $a0, $t0, DOWNARROW
                li      $t0, 0x00010025         # left arrow
                beq     $a0, $t0, LEFTARROW
                li      $t0, 0x00010027         # right arrow
                beq     $a0, $t0, RIGHTARROW
                li      $t0, 0x00000008         # backspace
                beq     $a0, $t0, BACKSPACE                      
                
                and     $a0, $a0, $t6
                add     $t1, $s3, $t4
                add     $t2, $s4, $t4
                beq     $t1, $t2, INSERT
MOVELOOP1:      lh      $t0, -1($t2)
                sh      $t0, 0($t2)
                addi    $t2, $t2, -1
                beq     $t1, $t2, INSERT
                jd      MOVELOOP1
INSERT:         sh      $a0, 0($t1)
                addi    $s3, $s3, 1
                addi    $s4, $s4, 1 
                
PRINT:          move    $a0, $t4
                li      $a1, 40
                li      $v0, 1
                syscall 
                jd      MAINLOOP
           
BACKSPACE:      beq     $s3, $zero, PRINT
                add     $t1, $s3, $t4
                add     $t2, $s4, $t4
                beq     $s3, $s4, DELETE
MOVELOOP2:      lh      $t0, 0($t1)
                sh      $t0, -1($t1)
                addi    $t1, $t1, 1
                bne     $t1, $t2, MOVELOOP2
DELETE:         sh      $zero, -1($t2)
                addi    $s3, $s3, -1
                addi    $s4, $s4, -1
                jd      PRINT

UPARROW:        jd      MAINLOOP

DOWNARROW:      jd      MAINLOOP

LEFTARROW:      beq     $s3, $zero, MAINLOOP
                add     $t3, $t4, $s3
                sh      $t5, 0($t3)
                addi    $s3, $s3, -1
                add     $t3, $t4, $s3
                lh      $t1, 0($t3)
                move    $t5, $t1
                add     $t3, $t4, $s3
                sh      $t7, 0($t3)
                add     $t3, $t4, $s4
                lh      $t1, 0($t3)
                beq     $t1, $zero, DECQ
                jd      PRINT
                
DECQ:           addi    $s4, $s4, -1
                jd      PRINT                

RIGHTARROW:     beq     $s3, $s4, MAINLOOP
                add     $t3, $t4, $s3
                sh      $t5, 0($t3)
                addi    $s3, $s3, 1
                add     $t3, $t4, $s3
                lh      $t1, 0($t3)
                move    $t5, $t1
                add     $t3, $t4, $s3    
                sh      $t7, 0($t3)
                beq     $s3, $s4, INCQ
JP:             jd      PRINT
                
INCQ:           beq     $t5, $zero, JP
                addi    $s4, $s4, 1
                jd      PRINT
                             
GETCHAR:        push    $v0
                li      $v0, 3
                syscall
                pop     $v0
                jr      $ra
               
EXIT:           la      $t0, RETADDR
                lw      $ra, 0($t0)
                jr      $ra
                 
str:            .asciiz "Serenity Editor v2.0"       

EDITORMEM:      .2byte  EDITORMEM
                .space  0x800
                
RETADDR:        .space  1